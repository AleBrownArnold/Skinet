{"version":3,"sources":["webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html"],"names":["routes","path","component","AccountRoutingModule","forChild","declarations","imports","exports","AccountModule","LoginComponent","fb","accountService","router","activatedRoute","returnUrl","snapshot","queryParams","createLoginForm","loginForm","group","email","required","pattern","password","login","value","subscribe","navigateByUrl","error","console","log","onSubmit","selector","templateUrl","styleUrls","RegisterComponent","createRegisterForm","registerForm","displayName","validateEmailNotTaken","register","response","errors","control","pipe","checkEmailExists","res","emailExists"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component:RegisterComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n            </div>\n            <app-text-inputs formControlName=\"email\" [label]=\"'Email Address'\"></app-text-inputs>\n            <app-text-inputs formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-inputs>\n            <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign In</button>        \n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { of, timer } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [null,\n        [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')], \n        [this.validateEmailNotTaken()]],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/shop');\n    }, error => {\n      console.log(error);\n      this.errors = error.errors;\n    });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n              return res ? {emailExists: true} : null;\n            })\n          );\n        })\n      );\n    };\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n                <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n            </div>\n            <app-text-inputs formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-inputs>\n            <app-text-inputs formControlName=\"email\" [label]=\"'Email Address'\"></app-text-inputs>\n            <app-text-inputs formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-inputs>\n            \n            <ul class=\"text-danger list-unstyled\" *ngIf=\"this.errors\">\n                <li *ngFor=\"let error of errors\">{{error}}</li>\n            </ul>\n\n            <button  class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>        \n        </form>\n    </div>\n</div>\n"]}